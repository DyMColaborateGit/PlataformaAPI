// <auto-generated />
using System;
using App.Infraestructure.Connect;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Infraestructure.Connect.Migrations
{
    [DbContext(typeof(ConnectContext))]
    partial class ConnectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.Exception_LogEntities", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Aplicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<string>("ExceptionString")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("FechaLog")
                        .HasColumnType("Datetime");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.HasKey("LogId");

                    b.ToTable("Exception_Log", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_CargosEntities", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"));

                    b.Property<int>("AreaValoracion")
                        .HasColumnType("int");

                    b.Property<string>("BActivo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("COActiva")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("CodigoCO")
                        .HasColumnType("int");

                    b.Property<bool>("DescCargo")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("Datetime");

                    b.Property<int>("GrupoCargo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoNivelEstrategico")
                        .HasColumnType("int");

                    b.Property<int>("NivelSeguridad")
                        .HasColumnType("int");

                    b.Property<bool>("Nuevo")
                        .HasColumnType("bit");

                    b.Property<long>("UsuarioCreacion")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioModificacion")
                        .HasColumnType("bigint");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("CargoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("scp_Cargos", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_ClientesEntities", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("CodigoCli")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("CodigoLicencia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("Datetime");

                    b.Property<string>("HostBD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("InsLog")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomBD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("NumUsers")
                        .HasColumnType("int");

                    b.Property<string>("PassBD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("PortBD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("StrCorreo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("StrPassword")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TipoBD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("TipoEmpresa")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("TipoLicenciaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoLogin")
                        .HasColumnType("int");

                    b.Property<int>("TipoSync")
                        .HasColumnType("int");

                    b.Property<string>("UserBD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("ClienteId");

                    b.ToTable("scp_Clientes", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", b =>
                {
                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ClaveLdap")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteobjClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodProveedor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("CodTipoMatrix")
                        .HasColumnType("int");

                    b.Property<string>("CodigoCli")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("DominioLdap")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("EmpresaName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("LogoMacroProceso")
                        .HasColumnType("bit");

                    b.Property<int>("ParamCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("SrvAutenticacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("TipoLogin")
                        .HasColumnType("int");

                    b.Property<int>("TipoNivelComp")
                        .HasColumnType("int");

                    b.Property<long>("UsuarioCreacion")
                        .HasColumnType("bigint");

                    b.Property<string>("UsuarioLdap")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<long>("UsuarioModificacion")
                        .HasColumnType("bigint");

                    b.HasKey("EmpresaId");

                    b.HasIndex("ClienteobjClienteId");

                    b.ToTable("scp_Empresas", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_FuncionariosEntities", b =>
                {
                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int?>("Cenco")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoPerfil")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaIngreso")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<int?>("Genero")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("Hojadevida")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("Id_funcionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_funcionario"));

                    b.Property<bool?>("IndiEstrategico")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("NivelSeguridad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool?>("Nuevo")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("OficinaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SedeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("Sueldo")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoContratoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("ZonaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Identificacion");

                    b.HasIndex("CargoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("scp_Funcionarios", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_RolesEntities", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("CodigoApp")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("CodigoRol")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<int?>("RolPadre")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("RoleId");

                    b.ToTable("scp_Roles", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_UsuariosRolesEntities", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("scp_UsuariosRoles", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_Ind_ResulDirectorGerentesEntities", b =>
                {
                    b.Property<int>("Resultadoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Resultadoid"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<int>("Mesfin")
                        .HasColumnType("int");

                    b.Property<int>("Mesini")
                        .HasColumnType("int");

                    b.Property<decimal>("Resultado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("Resultadoid");

                    b.ToTable("tbl_Ind_ResulDirectorGerentes", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_AspectosValoracionEntities", b =>
                {
                    b.Property<int>("AspectoValoracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AspectoValoracionId"));

                    b.Property<string>("AspectoValoracion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("AspectoValoracionId");

                    b.ToTable("tbl_com_AspectosValoracion", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ConsolidadoDesempenoEntities", b =>
                {
                    b.Property<int>("ConsolidadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsolidadoId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<double>("ValorAnalisis")
                        .HasColumnType("float");

                    b.HasKey("ConsolidadoId");

                    b.ToTable("tbl_com_ConsolidadoDesempeno", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_DialogodeDesarrolloEntities", b =>
                {
                    b.Property<int>("IdDialogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDialogo"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("bigint");

                    b.Property<long>("GestorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TipoGestor")
                        .IsRequired()
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.HasKey("IdDialogo");

                    b.ToTable("tbl_com_DialogodeDesarrollo", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_EncabezadoEvaEntities", b =>
                {
                    b.Property<int>("EncabezadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EncabezadoId"));

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("InIdEbaluacion")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Oficina")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Proceso")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Texto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TextoIndi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("EncabezadoId");

                    b.HasIndex("InIdEbaluacion");

                    b.ToTable("tbl_com_EncabezadoEva", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_EscalaEvaluacionEntities", b =>
                {
                    b.Property<int>("EscalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscalaId"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("AspectovaloracionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Escala")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Fondo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("EscalaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("tbl_com_EscalaEvaluacion", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_NivelesCompetenciasEntities", b =>
                {
                    b.Property<int>("NivelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NivelId"));

                    b.Property<double>("Calificacion")
                        .HasColumnType("double");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<double?>("MaxDesempeno")
                        .IsRequired()
                        .HasColumnType("double");

                    b.Property<double?>("MinDesempeno")
                        .IsRequired()
                        .HasColumnType("double");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<double>("ValorMaxComp")
                        .HasColumnType("double");

                    b.Property<double>("ValorMaxInd")
                        .HasColumnType("double");

                    b.Property<double>("ValorMinComp")
                        .HasColumnType("double");

                    b.Property<double>("ValorMinInd")
                        .HasColumnType("double");

                    b.HasKey("NivelId");

                    b.ToTable("tbl_com_NivelesCompetencias", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_NivelesdeDesempenoEntities", b =>
                {
                    b.Property<int>("IdNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNivel"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ConceptoFinal")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("NivelCompetencia")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("PorcentajeMax")
                        .HasColumnType("double");

                    b.Property<decimal>("PorcentajeMin")
                        .HasColumnType("double");

                    b.HasKey("IdNivel");

                    b.ToTable("tbl_com_NivelesdeDesempeno", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_NormasEntities", b =>
                {
                    b.Property<int>("InIdNorma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InIdNorma"));

                    b.Property<bool?>("BEstado")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("Fechacreacion")
                        .HasColumnType("Datetime");

                    b.Property<int?>("InConsecutivo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("InIdGrupo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("InIdTipoNorma")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcCodFuncion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcCodNorma")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcCompetencia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("InIdNorma");

                    b.HasIndex("EmpresaId");

                    b.ToTable("tbl_com_Normas", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ParametrosDesempenoEntities", b =>
                {
                    b.Property<int>("ParametroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParametroId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Descripcion")
                        .HasColumnType("ntext");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("OperadorMax")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("OperadorMin")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<double>("ValorMax")
                        .HasColumnType("float");

                    b.Property<double>("ValorMin")
                        .HasColumnType("float");

                    b.HasKey("ParametroId");

                    b.ToTable("tbl_com_ParametrosDesempeno", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ProgEvaluacionEntities", b =>
                {
                    b.Property<int>("InIdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InIdEvaluacion"));

                    b.Property<bool?>("BEstado")
                        .HasColumnType("bit");

                    b.Property<bool?>("BEstadoLider")
                        .HasColumnType("bit");

                    b.Property<bool?>("BLider")
                        .HasColumnType("bit");

                    b.Property<string>("CajaMapaTalento")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<double?>("CalifComp")
                        .HasColumnType("double");

                    b.Property<double?>("CalifIndi")
                        .HasColumnType("double");

                    b.Property<int?>("CodigoCargo")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ColorComp")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ColorComt")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ColorIndi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ColorMapaTalento")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ColorTIG")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ColorVencimiento")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("CompEva")
                        .HasColumnType("int");

                    b.Property<bool?>("Concepto")
                        .HasColumnType("bit");

                    b.Property<string>("DescNivel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("DiaVencimiento")
                        .HasColumnType("int");

                    b.Property<int?>("DuracionContrato")
                        .HasColumnType("int");

                    b.Property<bool?>("EvaIndis")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("Datetime");

                    b.Property<long?>("IdPadre")
                        .HasColumnType("double");

                    b.Property<int?>("IdPrgramacionEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("InAno")
                        .HasColumnType("int");

                    b.Property<long?>("InIdEvaluado")
                        .HasColumnType("bigint");

                    b.Property<long?>("InIdEvaluador")
                        .HasColumnType("bigint");

                    b.Property<int?>("InIdTipoNorma")
                        .HasColumnType("int");

                    b.Property<int?>("InTipoInstrumento")
                        .HasColumnType("int");

                    b.Property<int?>("IndiEva")
                        .HasColumnType("int");

                    b.Property<string>("JustificacionConcepto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("MesFin")
                        .HasColumnType("int");

                    b.Property<int?>("MesIni")
                        .HasColumnType("int");

                    b.Property<int?>("MotivoAnalisis")
                        .HasColumnType("int");

                    b.Property<string>("Nivel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("NivelCargo")
                        .HasColumnType("int");

                    b.Property<string>("NivelComp")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NivelComt")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NivelIndi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NivelTIG")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomEvaluado")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomEvaluador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomMesFin")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomMesInicio")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NomNorma")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("NumeroMapaTalento")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoCompe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PesoIndi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PesoTIG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PesoTec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("PorEvaComp")
                        .HasColumnType("double");

                    b.Property<double?>("PorEvaIndi")
                        .HasColumnType("double");

                    b.Property<double?>("PromComp")
                        .HasColumnType("double");

                    b.Property<double?>("PromIndi")
                        .HasColumnType("double");

                    b.Property<decimal?>("PromTIG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PromTec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Resultado")
                        .HasColumnType("double");

                    b.Property<decimal?>("ResultadoADI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("TipoNivelEstrategico")
                        .HasColumnType("int");

                    b.Property<int?>("TipoValoracionId")
                        .HasColumnType("int");

                    b.Property<int?>("TotComp")
                        .HasColumnType("int");

                    b.Property<int?>("TotIndi")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("InIdEvaluacion");

                    b.ToTable("tbl_com_ProgEvaluacion", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ProgramacionMasivaEvaluacionesEntities", b =>
                {
                    b.Property<int>("IdProgramacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProgramacion"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<long>("CedulaEvaluado")
                        .HasColumnType("bigint");

                    b.Property<long>("CedulaEvaluador")
                        .HasColumnType("UsuarioProgramacion");

                    b.Property<int>("ClaveCargoEvaluado")
                        .HasColumnType("int");

                    b.Property<int>("CodigoDireccion")
                        .HasColumnType("int");

                    b.Property<int>("CodigoGerencia")
                        .HasColumnType("int");

                    b.Property<int>("CodigoNivelCompetencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaProgramacion")
                        .HasColumnType("Datetime");

                    b.Property<int>("MesFin")
                        .HasColumnType("int");

                    b.Property<int>("MesInicio")
                        .HasColumnType("int");

                    b.Property<int>("MesProgramado")
                        .HasColumnType("int");

                    b.Property<long>("UsuarioProgramacion")
                        .HasColumnType("bigint");

                    b.HasKey("IdProgramacion");

                    b.ToTable("tbl_com_ProgramacionMasivaEvaluaciones", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadoEvaluacionADAEntities", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<int?>("IdEvaluacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdHijo")
                        .HasColumnType("int");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("int");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<bool?>("Resultado")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("ResultadoTxt")
                        .IsRequired()
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TextoPregunta")
                        .IsRequired()
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TextoRespuesta")
                        .IsRequired()
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdResultado");

                    b.ToTable("tbl_com_ResultadoEvaluacionADA", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadosEntities", b =>
                {
                    b.Property<int>("ResultadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoId"));

                    b.Property<int?>("BCerrado")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("BEstado")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("BMejoramiento")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Criterio")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("CriterioId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("EscalaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Escalanivel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEva")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<int>("NormaId")
                        .HasColumnType("int");

                    b.Property<int?>("ResEscala")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VcObMejoramiento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("ResultadoId");

                    b.HasIndex("EvaluacionId");

                    b.ToTable("tbl_com_Resultados", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadosEvaIndicadoresEntities", b =>
                {
                    b.Property<int>("ResultadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoId"));

                    b.Property<string>("Color")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Cumple")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("Editar")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableCalificacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablePeso")
                        .HasColumnType("bit");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("Datetime");

                    b.Property<int>("IndcadorId")
                        .HasColumnType("int");

                    b.Property<string>("Indicador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PesoNext")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ponderado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Real")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoIndi")
                        .HasColumnType("int");

                    b.HasKey("ResultadoId");

                    b.HasIndex("EvaluacionId");

                    b.HasIndex("IndcadorId");

                    b.ToTable("tbl_com_ResultadosEvaIndicadores", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadosEvaluacionEntities", b =>
                {
                    b.Property<int>("ResultadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("NormaId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("double");

                    b.Property<double>("Resultado")
                        .HasColumnType("double)");

                    b.HasKey("ResultadoId");

                    b.HasIndex("EvaluacionId");

                    b.HasIndex("NormaId");

                    b.ToTable("tbl_com_ResultadosEvaluacion", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultcomTecnicasEntities", b =>
                {
                    b.Property<int>("ResultadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoId"));

                    b.Property<int?>("BCerrado")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("BEstado")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EscalaId")
                        .HasColumnType("int");

                    b.Property<string>("EscalaNivel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEva")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<string>("Observacion")
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar");

                    b.Property<int>("ResEscala")
                        .HasColumnType("int");

                    b.HasKey("ResultadoId");

                    b.ToTable("tbl_com_ResultcomTecnicas", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_TxtFormEvaluacionEntities", b =>
                {
                    b.Property<int>("TextoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextoId"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Tipotxt")
                        .HasColumnType("int");

                    b.Property<int>("TipovaloracionId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("TextoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("tbl_com_TxtFormEvaluacion", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_MastIndicadoresEntities", b =>
                {
                    b.Property<int>("InIdIndicador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InIdIndicador"));

                    b.Property<bool>("BRevisionGerencial")
                        .HasColumnType("bit");

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<string>("ClaseIndicador")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("CodIndicador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("CodigoCargo")
                        .HasColumnType("int");

                    b.Property<string>("ComoSeCalcula")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("Datetime");

                    b.Property<int?>("Finalidad")
                        .HasColumnType("int");

                    b.Property<string>("FuncionarioInd")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int?>("IdFuenteEstrategico")
                        .HasColumnType("int");

                    b.Property<int?>("IdObjetivo")
                        .HasColumnType("int");

                    b.Property<int>("InEstado")
                        .HasColumnType("int");

                    b.Property<int>("InFrecuencia")
                        .HasColumnType("int");

                    b.Property<int>("InIdProceso")
                        .HasColumnType("int");

                    b.Property<int>("InIdProducto")
                        .HasColumnType("int");

                    b.Property<int>("InIdResponsable")
                        .HasColumnType("int");

                    b.Property<int>("InIdSistema")
                        .HasColumnType("int");

                    b.Property<int>("InIdTipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("InIdTipoMeta")
                        .HasColumnType("int");

                    b.Property<int>("InIdTipoObjetivo")
                        .HasColumnType("int");

                    b.Property<decimal>("InMetaIndicador")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ObjetivoCargo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PuntoControl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoCalculo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIndGeneral")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<long?>("UsuarioCreacion")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioModificacion")
                        .HasColumnType("bigint");

                    b.Property<string>("VcDenominador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcNombreIndicador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcNumerador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("InIdIndicador");

                    b.ToTable("tbl_ind_MastIndicadores", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_ObjetivosCalidadEntities", b =>
                {
                    b.Property<int>("InIdTipoObjetivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InIdTipoObjetivo"));

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("Perspectiva")
                        .HasColumnType("int");

                    b.Property<string>("VcIndicador")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("VcObjetivo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("InIdTipoObjetivo");

                    b.ToTable("tbl_ind_ObjetivosCalidad", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_PesosxTipoIndEstxTipoNivelEstEntities", b =>
                {
                    b.Property<int>("IdPesos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPesos"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Empresaid")
                        .HasColumnType("int");

                    b.Property<int>("IdtipoIndicadorEst")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoNivelEst")
                        .HasColumnType("int");

                    b.HasKey("IdPesos");

                    b.ToTable("tbl_ind_PesosxTipoIndEstxTipoNivelEst", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_PesosxTipoIndxNivelCompEntities", b =>
                {
                    b.Property<int>("IdPesosIndiNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPesosIndiNivel"));

                    b.Property<int>("Empresaid")
                        .HasColumnType("int");

                    b.Property<int>("IdtipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VisibleADI")
                        .HasColumnType("bit");

                    b.HasKey("IdPesosIndiNivel");

                    b.ToTable("tbl_ind_PesosxTipoIndxNivelComp", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_RelIndiEstrategicosFuncionariosEntities", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<int>("IndicadorId")
                        .HasColumnType("int");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<int?>("tbl_ind_MastIndicadoresObjInIdIndicador")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.HasIndex("tbl_ind_MastIndicadoresObjInIdIndicador");

                    b.ToTable("tbl_ind_RelIndiEstrategicosFuncionarios", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_TiposIndicadoresEstrategicosEntities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoIndiEstra")
                        .HasColumnType("int");

                    b.Property<string>("TipoIndicadorEstrategico")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("tbl_ind_TiposIndicadoresEstrategicos", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_TotalIndEstCorporativosEntities", b =>
                {
                    b.Property<int>("IdTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTotal"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Empresaid")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTotal");

                    b.ToTable("tbl_ind_TotalIndEstCorporativos", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_mast_OficinasEntities", b =>
                {
                    b.Property<int>("CodigoOf")
                        .HasColumnType("int");

                    b.Property<int>("CargoResponsable")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("Datetime");

                    b.Property<string>("Oficina")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("OficinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OficinaId"));

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("CodigoOf");

                    b.HasIndex("EmpresaId");

                    b.ToTable("tbl_mast_Oficinas", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_mast_ZonasEntities", b =>
                {
                    b.Property<int>("CodigoZO")
                        .HasColumnType("int");

                    b.Property<int>("CargoResponsable")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("Datetime");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("ZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZonaId"));

                    b.HasKey("CodigoZO");

                    b.HasIndex("EmpresaId");

                    b.ToTable("tbl_mast_Zonas", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Entities.scp_UsuariosEntities", b =>
                {
                    b.Property<long>("WWID")
                        .HasColumnType("bigint");

                    b.Property<string>("Clave")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("ErroresCount")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .IsRequired()
                        .HasColumnType("Datetime");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsLogged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("Datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar");

                    b.HasKey("WWID");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("scp_Usuarios", (string)null);
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_CargosEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("SCP_Cargos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_ClientesEntities", "Clienteobj")
                        .WithMany("SCP_Empresas")
                        .HasForeignKey("ClienteobjClienteId");

                    b.Navigation("Clienteobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_FuncionariosEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_CargosEntities", "Cargoobj")
                        .WithMany("SCP_Funcionarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("SCP_Funcionarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cargoobj");

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_UsuariosRolesEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_RolesEntities", "Roleobj")
                        .WithMany("scp_UsuariosRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Infraestructure.Entities.scp_UsuariosEntities", "Usuariobj")
                        .WithMany("scp_UsuariosRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roleobj");

                    b.Navigation("Usuariobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_EncabezadoEvaEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_com_ProgEvaluacionEntities", "ProgEvaluacionobj")
                        .WithMany("TBL_com_EncabezadoEva")
                        .HasForeignKey("InIdEbaluacion")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ProgEvaluacionobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_EscalaEvaluacionEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("TBL_com_EscalaEvaluacion")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_NormasEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("TBL_com_Normas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadosEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_com_ProgEvaluacionEntities", "ProgEvaluacionobj")
                        .WithMany("TBL_com_Resultados")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProgEvaluacionobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadosEvaIndicadoresEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_com_ProgEvaluacionEntities", "ProgEvaluacionobj")
                        .WithMany("TBL_com_ResultadosEvaIndicadores")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_ind_MastIndicadoresEntities", "MastIndicadoresobj")
                        .WithMany("TBL_com_ResultadosEvaIndicadores")
                        .HasForeignKey("IndcadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MastIndicadoresobj");

                    b.Navigation("ProgEvaluacionobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ResultadosEvaluacionEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_com_ProgEvaluacionEntities", "ProgEvaluacionobj")
                        .WithMany("TBL_com_ResultadosEvaluacion")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_com_NormasEntities", "Normasobj")
                        .WithMany("TBL_com_ResultadosEvaluacion")
                        .HasForeignKey("NormaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Normasobj");

                    b.Navigation("ProgEvaluacionobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_TxtFormEvaluacionEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("TBL_com_TxtFormEvaluacion")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_RelIndiEstrategicosFuncionariosEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.tbl_ind_MastIndicadoresEntities", "tbl_ind_MastIndicadoresObj")
                        .WithMany("TBL_ind_RelIndiEstrategicosFuncionarios")
                        .HasForeignKey("tbl_ind_MastIndicadoresObjInIdIndicador");

                    b.Navigation("tbl_ind_MastIndicadoresObj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_mast_OficinasEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("TBL_mast_Oficinas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_mast_ZonasEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("TBL_mast_Zonas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresaobj");
                });

            modelBuilder.Entity("App.Infraestructure.Entities.scp_UsuariosEntities", b =>
                {
                    b.HasOne("App.Infraestructure.Connect.Entities.scp_ClientesEntities", "Clienteobj")
                        .WithMany("SCP_Usuarios")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", "Empresaobj")
                        .WithMany("SCP_Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Infraestructure.Connect.Entities.scp_FuncionariosEntities", "Funcionariobj")
                        .WithMany("SCP_Usuarios")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Clienteobj");

                    b.Navigation("Empresaobj");

                    b.Navigation("Funcionariobj");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_CargosEntities", b =>
                {
                    b.Navigation("SCP_Funcionarios");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_ClientesEntities", b =>
                {
                    b.Navigation("SCP_Empresas");

                    b.Navigation("SCP_Usuarios");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_EmpresasEntities", b =>
                {
                    b.Navigation("SCP_Cargos");

                    b.Navigation("SCP_Funcionarios");

                    b.Navigation("SCP_Usuarios");

                    b.Navigation("TBL_com_EscalaEvaluacion");

                    b.Navigation("TBL_com_Normas");

                    b.Navigation("TBL_com_TxtFormEvaluacion");

                    b.Navigation("TBL_mast_Oficinas");

                    b.Navigation("TBL_mast_Zonas");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_FuncionariosEntities", b =>
                {
                    b.Navigation("SCP_Usuarios");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.scp_RolesEntities", b =>
                {
                    b.Navigation("scp_UsuariosRoles");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_NormasEntities", b =>
                {
                    b.Navigation("TBL_com_ResultadosEvaluacion");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_com_ProgEvaluacionEntities", b =>
                {
                    b.Navigation("TBL_com_EncabezadoEva");

                    b.Navigation("TBL_com_Resultados");

                    b.Navigation("TBL_com_ResultadosEvaIndicadores");

                    b.Navigation("TBL_com_ResultadosEvaluacion");
                });

            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_ind_MastIndicadoresEntities", b =>
                {
                    b.Navigation("TBL_com_ResultadosEvaIndicadores");

                    b.Navigation("TBL_ind_RelIndiEstrategicosFuncionarios");
                });

            modelBuilder.Entity("App.Infraestructure.Entities.scp_UsuariosEntities", b =>
                {
                    b.Navigation("scp_UsuariosRoles");
                });

            // se agrega pero no se sabe si es necesario
            modelBuilder.Entity("App.Infraestructure.Connect.Entities.tbl_doc_DocumentosEntities", b =>
            {
                b.Property<int>("DocumentoId")
                    .IsRequired()
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoId"));

                b.Property<string>("NombreDoc")
                .HasColumnName("nombre_doc")
                .HasMaxLength(255)
                .HasColumnType("nvarchar");

                b.Property<int>("InIdSistema")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<int>("EmpresaId")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<int>("Consecutivo")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<string>("CodigoDoc")
                    .HasColumnName("codigo_doc")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar");

                b.Property<int>("IdTipo")
                    .HasColumnName("id_tipo")
                    .IsRequired()
                    .HasColumnType("int");

                //b.Property<int>("ProcesoDoc")
                //    .HasColumnName("proceso_doc")
                //    .IsRequired()
                //    .HasColumnType("int");

                b.HasOne("App.Infraestructure.Connect.Entities.scp_ProcesosEntities", "ProcesosObj")
                        .WithMany("TBL_Doc_Documentos")
                        .HasForeignKey("proceso_doc")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                b.Navigation("ProcesosObj");

                b.Property<int>("IdProducto")
                    .HasColumnName("id_producto")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<DateTime>("FechaEmision")
                    .HasColumnName("fecha_emision")
                    .IsRequired()
                    .HasColumnType("Datetime");

                b.Property<DateTime>("FechaActualizacion")
                    .HasColumnName("fecha_actualizacion")
                    .HasColumnType("Datetime");

                b.Property<string>("NumeroActualizacion")
                    .HasColumnName("numero_actualizacion")
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnType("char");

                b.Property<int>("ElaboradoPor")
                    .HasColumnName("elaborado_por")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<int>("RevisadoPor")
                    .HasColumnName("revisado_por")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<int>("AprobadoPor")
                    .HasColumnName("aprobado_por")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<bool>("BCumple")
                    .HasColumnType("bit");

                b.Property<int>("Responsable")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<int>("DocumentoIdPadre")
                    .HasColumnType("int");

                b.Property<string>("UrlFormato")
                    .HasColumnName("url_formato")
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar");

                b.Property<string>("Estado")
                    .IsRequired()
                    .HasMaxLength(2)
                    .HasColumnType("nvarchar");

                b.Property("Historial")
                    .HasColumnType("text");

                b.Property<DateTime>("FechaFlujoIni")
                    .HasColumnType("Datetime");

                b.Property<DateTime>("FechaFlujoFin")
                    .HasColumnType("Datetime");

                b.Property<int>("InDiasRetraso")
                    .HasColumnType("int");

                b.Property<int>("NivelSeguridad")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<string>("UsuarioCreacion")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar");

                b.Property("FechaCreacion")
                    .IsRequired()
                    .HasColumnType("Datetime");

                b.Property<string>("UsuarioModificacion")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar");

                b.Property<DateTime>("FechaModificacion")
                    .HasColumnType("Datetime");

                b.Property<int>("IdArea")
                    .HasColumnName("id_area")
                    .HasColumnType("int");

                b.Property<bool>("EstadoCarga")
                    .IsRequired(false)
                    .HasColumnType("bit");

                b.Property<string>("RazonObsoleto")
                   .HasMaxLength(int.MaxValue)
                   .HasColumnType("nvarchar(MAX)");

                b.Property<DateTime>("FechaEnvioObsoleto")
                    .HasColumnType("Datetime");

                b.Property<long>("UsuarioEnvioObsoleto")
                    .HasColumnType("bigint");

                b.Property<DateTime>("FechaDevolucionVigente")
                    .HasColumnType("Datetime");

                b.Property<long>("UsuarioDevolucionVigente")
                    .HasColumnType("bigint");

            });
#pragma warning restore 612, 618
        }
    }
}
